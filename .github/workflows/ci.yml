name: CI/CD Pipeline

# Combine all triggers under one `on` block
on:
  pull_request:
    branches:
      - main # Run tests on pull requests targeting the main branch
  push:
    branches:
      - main # Run tests on direct pushes to main
      - 'release/v[0-9]{2}\.[0-9]{2}\.[0-9]{2}' # Matches branches like release/v10.12.01
    tags:
      - 'v[0-9]{2}\.[0-9]{2}\.[0-9]{2}' # Matches tags like v10.12.01

jobs:
  # Test job for pull requests and main branch pushes
  test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Step 3: Install dependencies (from requirements.txt)
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests using pytest (this is the unit test step)
      - name: Run tests
        run: |
          pytest  # This runs your unit tests using pytest

  # Build and deploy Docker image on valid tag or release branch pushes
  build-and-deploy:
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/release/v')
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Step 3: Install dependencies (from requirements.txt)
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Build Docker image with a custom tag (e.g., v1.0.0-abc1234)
      - name: Build Docker image with custom tag
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"  # Extract tag name if it's a tag push
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"  # Extract branch name if it's a branch push

          # Define custom tag based on the event type
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            IMAGE_TAG="$TAG_NAME-${GITHUB_SHA:0:7}"
          elif [[ $GITHUB_REF == refs/heads/release/* ]]; then
            IMAGE_TAG="$BRANCH_NAME-${GITHUB_SHA:0:7}"
          fi

          echo "Building Docker image with tag: $IMAGE_TAG"
          docker build -t pv-fastapi-async-crud:$IMAGE_TAG .

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: palakornv # Replace with your Docker Hub username
          password: ${{ secrets.DOCKER_HUB_TOKEN }} # Docker Hub password/token stored in GitHub Secrets

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker tag pv-fastapi-async-crud:$IMAGE_TAG palakornv/pv-fastapi-async-crud:$IMAGE_TAG
          docker push palakornv/pv-fastapi-async-crud:$IMAGE_TAG
          echo "Pushed Docker image with tag: $IMAGE_TAG"
